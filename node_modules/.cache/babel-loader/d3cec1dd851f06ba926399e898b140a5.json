{"ast":null,"code":"var STOCKS_URL=\"https://stockfolio-api.herokuapp.com/stocks\";var STOCKS_UPDATE=function STOCKS_UPDATE(stocksId){return\"\".concat(STOCKS_URL,\"/\").concat(stocksId);};var setStocks=function setStocks(stocks){return{type:\"SET_STOCKS\",payload:stocks};};var setCurrentStock=function setCurrentStock(stockObj){return{type:\"SET_CURRENT_STOCK\",payload:stockObj};};var getStocksFromDB=function getStocksFromDB(){return function(dispatch){var config={method:\"GET\",headers:{Authorization:\"Bearer \".concat(localStorage.token)}};fetch(STOCKS_URL,config).then(function(res){return res.json();}).then(function(stocksData){return dispatch(setStocks(stocksData));}).catch(function(error){return console.log(error);});};};var getCurrentStock=function getCurrentStock(stockObj){return function(dispatch){localStorage.setItem(\"stock\",JSON.stringify(stockObj));var stock=JSON.parse(localStorage.stock);var config={method:\"GET\",headers:{Authorization:\"Bearer \".concat(localStorage.token)}};fetch(\"\".concat(STOCKS_URL,\"/\").concat(stock.id),config).then(function(res){return res.json();}).then(function(stockData){dispatch(setCurrentStock(stockData));}).catch(function(error){return console.log(error);});};};// TODO: DO STOCK SHARES UPDATE;\nvar patchStockToDB=function patchStockToDB(stockObj,stockQuanity){return function(dispatch){var remainingShares=stockObj.shares-stockQuanity;var config={method:\"PATCH\",headers:{Authorization:\"Bearer \".concat(localStorage.token),Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({shares:remainingShares})};fetch(STOCKS_UPDATE(stockObj.id),config).then(function(res){return res.json();}).then(function(stockData){dispatch(setCurrentStock(stockData));}).catch(function(error){return console.log(error);});getStocksFromDB();};};export default{getStocksFromDB:getStocksFromDB,getCurrentStock:getCurrentStock,patchStockToDB:patchStockToDB};","map":{"version":3,"sources":["/Users/hamidoudiallo/Desktop/react_projects/portfolio_stocks/frontend/src/redux/actions/stocksActions.js"],"names":["STOCKS_URL","STOCKS_UPDATE","stocksId","setStocks","stocks","type","payload","setCurrentStock","stockObj","getStocksFromDB","dispatch","config","method","headers","Authorization","localStorage","token","fetch","then","res","json","stocksData","catch","error","console","log","getCurrentStock","setItem","JSON","stringify","stock","parse","id","stockData","patchStockToDB","stockQuanity","remainingShares","shares","Accept","body"],"mappings":"AAAA,GAAMA,CAAAA,UAAU,CAAG,6CAAnB,CACA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,kBAAiBF,UAAjB,aAA+BE,QAA/B,GAAtB,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,MAAD,QAAa,CAC9BC,IAAI,CAAE,YADwB,CAE9BC,OAAO,CAAEF,MAFqB,CAAb,EAAlB,CAKA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,QAAD,QAAe,CACtCH,IAAI,CAAE,mBADgC,CAEtCC,OAAO,CAAEE,QAF6B,CAAf,EAAxB,CAKA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAM,UAACC,QAAD,CAAc,CAC3C,GAAIC,CAAAA,MAAM,CAAG,CACZC,MAAM,CAAE,KADI,CAEZC,OAAO,CAAE,CACRC,aAAa,kBAAYC,YAAY,CAACC,KAAzB,CADL,CAFG,CAAb,CAMAC,KAAK,CAACjB,UAAD,CAAaW,MAAb,CAAL,CACEO,IADF,CACO,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADP,EAEEF,IAFF,CAEO,SAACG,UAAD,QAAgBX,CAAAA,QAAQ,CAACP,SAAS,CAACkB,UAAD,CAAV,CAAxB,EAFP,EAGEC,KAHF,CAGQ,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX,EAHR,EAIA,CAXuB,EAAxB,CAaA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAClB,QAAD,QAAc,UAACE,QAAD,CAAc,CACnDK,YAAY,CAACY,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAerB,QAAf,CAA9B,EACA,GAAIsB,CAAAA,KAAK,CAAGF,IAAI,CAACG,KAAL,CAAWhB,YAAY,CAACe,KAAxB,CAAZ,CACA,GAAInB,CAAAA,MAAM,CAAG,CACZC,MAAM,CAAE,KADI,CAEZC,OAAO,CAAE,CACRC,aAAa,kBAAYC,YAAY,CAACC,KAAzB,CADL,CAFG,CAAb,CAMAC,KAAK,WAAIjB,UAAJ,aAAkB8B,KAAK,CAACE,EAAxB,EAA8BrB,MAA9B,CAAL,CACEO,IADF,CACO,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADP,EAEEF,IAFF,CAEO,SAACe,SAAD,CAAe,CACpBvB,QAAQ,CAACH,eAAe,CAAC0B,SAAD,CAAhB,CAAR,CACA,CAJF,EAKEX,KALF,CAKQ,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX,EALR,EAMA,CAfuB,EAAxB,CAiBA;AACA,GAAMW,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAC1B,QAAD,CAAW2B,YAAX,QAA4B,UAACzB,QAAD,CAAc,CAChE,GAAI0B,CAAAA,eAAe,CAAG5B,QAAQ,CAAC6B,MAAT,CAAkBF,YAAxC,CACA,GAAIxB,CAAAA,MAAM,CAAG,CACZC,MAAM,CAAE,OADI,CAEZC,OAAO,CAAE,CACRC,aAAa,kBAAYC,YAAY,CAACC,KAAzB,CADL,CAERsB,MAAM,CAAE,kBAFA,CAGR,eAAgB,kBAHR,CAFG,CAOZC,IAAI,CAAEX,IAAI,CAACC,SAAL,CAAe,CACpBQ,MAAM,CAAED,eADY,CAAf,CAPM,CAAb,CAWAnB,KAAK,CAAChB,aAAa,CAACO,QAAQ,CAACwB,EAAV,CAAd,CAA6BrB,MAA7B,CAAL,CACEO,IADF,CACO,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADP,EAEEF,IAFF,CAEO,SAACe,SAAD,CAAe,CACpBvB,QAAQ,CAACH,eAAe,CAAC0B,SAAD,CAAhB,CAAR,CACA,CAJF,EAKEX,KALF,CAKQ,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX,EALR,EAOAd,eAAe,GACf,CArBsB,EAAvB,CAuBA,cAAe,CACdA,eAAe,CAAfA,eADc,CAEdiB,eAAe,CAAfA,eAFc,CAGdQ,cAAc,CAAdA,cAHc,CAAf","sourcesContent":["const STOCKS_URL = \"https://stockfolio-api.herokuapp.com/stocks\";\nconst STOCKS_UPDATE = (stocksId) => `${STOCKS_URL}/${stocksId}`;\n\nconst setStocks = (stocks) => ({\n\ttype: \"SET_STOCKS\",\n\tpayload: stocks,\n});\n\nconst setCurrentStock = (stockObj) => ({\n\ttype: \"SET_CURRENT_STOCK\",\n\tpayload: stockObj,\n});\n\nconst getStocksFromDB = () => (dispatch) => {\n\tlet config = {\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${localStorage.token}`,\n\t\t},\n\t};\n\tfetch(STOCKS_URL, config)\n\t\t.then((res) => res.json())\n\t\t.then((stocksData) => dispatch(setStocks(stocksData)))\n\t\t.catch((error) => console.log(error));\n};\n\nconst getCurrentStock = (stockObj) => (dispatch) => {\n\tlocalStorage.setItem(\"stock\", JSON.stringify(stockObj));\n\tlet stock = JSON.parse(localStorage.stock);\n\tlet config = {\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${localStorage.token}`,\n\t\t},\n\t};\n\tfetch(`${STOCKS_URL}/${stock.id}`, config)\n\t\t.then((res) => res.json())\n\t\t.then((stockData) => {\n\t\t\tdispatch(setCurrentStock(stockData));\n\t\t})\n\t\t.catch((error) => console.log(error));\n};\n\n// TODO: DO STOCK SHARES UPDATE;\nconst patchStockToDB = (stockObj, stockQuanity) => (dispatch) => {\n\tlet remainingShares = stockObj.shares - stockQuanity;\n\tlet config = {\n\t\tmethod: \"PATCH\",\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${localStorage.token}`,\n\t\t\tAccept: \"application/json\",\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tshares: remainingShares,\n\t\t}),\n\t};\n\tfetch(STOCKS_UPDATE(stockObj.id), config)\n\t\t.then((res) => res.json())\n\t\t.then((stockData) => {\n\t\t\tdispatch(setCurrentStock(stockData));\n\t\t})\n\t\t.catch((error) => console.log(error));\n\n\tgetStocksFromDB();\n};\n\nexport default {\n\tgetStocksFromDB,\n\tgetCurrentStock,\n\tpatchStockToDB,\n};\n"]},"metadata":{},"sourceType":"module"}