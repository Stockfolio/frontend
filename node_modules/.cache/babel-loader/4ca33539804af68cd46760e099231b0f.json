{"ast":null,"code":"var _jsxFileName = \"/Users/hamidoudiallo/Desktop/portfolio_stocks/frontend/src/components/containers/TransactionsContainer.jsx\";\nimport React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport Transactions from \"../pages/Transactions\";\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    borderBottom: \"5px solid #e6e6e6\",\n    alignItems: \"center\",\n    margin: \"100px auto \",\n    width: \"60%\"\n  },\n  title: {\n    color: \"#a12bcc\",\n    textAlign: \"center\",\n    margin: \"0 auto 50px auto\"\n  }\n});\n\nconst TransactionsContainer = props => {\n  const classes = useStyles();\n  const currentUser = useSelector(state => state.login.currentUser);\n  console.log(currentUser.transactions);\n  let currentTransactions = currentUser.transactions;\n  useEffect(() => {\n    removeDuplicates(currentTransactions);\n  }, []);\n\n  const removeDuplicates = transactions => {\n    let uniqueSet = new Set();\n    let transactionData = JSON.stringify(transactions);\n    let newTransactionData = JSON.parse(transactionData);\n\n    for (let i = 0; i < newTransactionData.length; i++) {\n      debugger;\n\n      if (!uniqueSet.has(newTransactionData.stock)) {\n        uniqueSet.add(newTransactionData.stock);\n      }\n    }\n\n    return uniqueSet;\n  }; // const renderTransactions = () => {\n  // \treturn transactions.map(transaction => {\n  // \t\treturn <Transactions key={transaction.id} transaction={transaction} />;\n  // \t});\n  // };\n\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Transactions\"));\n};\n\nexport default TransactionsContainer;","map":{"version":3,"sources":["/Users/hamidoudiallo/Desktop/portfolio_stocks/frontend/src/components/containers/TransactionsContainer.jsx"],"names":["React","useEffect","makeStyles","useSelector","Transactions","useStyles","root","display","flexDirection","justifyContent","borderBottom","alignItems","margin","width","title","color","textAlign","TransactionsContainer","props","classes","currentUser","state","login","console","log","transactions","currentTransactions","removeDuplicates","uniqueSet","Set","transactionData","JSON","stringify","newTransactionData","parse","i","length","has","stock","add"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC5BI,EAAAA,IAAI,EAAE;AACLC,IAAAA,OAAO,EAAE,MADJ;AAELC,IAAAA,aAAa,EAAE,KAFV;AAGLC,IAAAA,cAAc,EAAE,cAHX;AAILC,IAAAA,YAAY,EAAE,mBAJT;AAKLC,IAAAA,UAAU,EAAE,QALP;AAMLC,IAAAA,MAAM,EAAE,aANH;AAOLC,IAAAA,KAAK,EAAE;AAPF,GADsB;AAU5BC,EAAAA,KAAK,EAAE;AACNC,IAAAA,KAAK,EAAE,SADD;AAENC,IAAAA,SAAS,EAAE,QAFL;AAGNJ,IAAAA,MAAM,EAAE;AAHF;AAVqB,CAAD,CAA5B;;AAiBA,MAAMK,qBAAqB,GAAGC,KAAK,IAAI;AACtC,QAAMC,OAAO,GAAGd,SAAS,EAAzB;AACA,QAAMe,WAAW,GAAGjB,WAAW,CAACkB,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,WAAtB,CAA/B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAW,CAACK,YAAxB;AACA,MAAIC,mBAAmB,GAAGN,WAAW,CAACK,YAAtC;AACAxB,EAAAA,SAAS,CAAC,MAAM;AACf0B,IAAAA,gBAAgB,CAACD,mBAAD,CAAhB;AACA,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,gBAAgB,GAAGF,YAAY,IAAI;AACxC,QAAIG,SAAS,GAAG,IAAIC,GAAJ,EAAhB;AACA,QAAIC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeP,YAAf,CAAtB;AACA,QAAIQ,kBAAkB,GAAGF,IAAI,CAACG,KAAL,CAAWJ,eAAX,CAAzB;;AACA,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,kBAAkB,CAACG,MAAvC,EAA+CD,CAAC,EAAhD,EAAoD;AACnD;;AACA,UAAI,CAACP,SAAS,CAACS,GAAV,CAAcJ,kBAAkB,CAACK,KAAjC,CAAL,EAA8C;AAC7CV,QAAAA,SAAS,CAACW,GAAV,CAAcN,kBAAkB,CAACK,KAAjC;AACA;AACD;;AAED,WAAOV,SAAP;AACA,GAZD,CATsC,CAsBtC;AACA;AACA;AACA;AACA;;;AACA,SACC;AAAK,IAAA,SAAS,EAAET,OAAO,CAACb,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAEa,OAAO,CAACL,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADD,CADD;AAMA,CAjCD;;AAmCA,eAAeG,qBAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\n\nimport Transactions from \"../pages/Transactions\";\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"row\",\n\t\tjustifyContent: \"space-evenly\",\n\t\tborderBottom: \"5px solid #e6e6e6\",\n\t\talignItems: \"center\",\n\t\tmargin: \"100px auto \",\n\t\twidth: \"60%\"\n\t},\n\ttitle: {\n\t\tcolor: \"#a12bcc\",\n\t\ttextAlign: \"center\",\n\t\tmargin: \"0 auto 50px auto\"\n\t}\n});\n\nconst TransactionsContainer = props => {\n\tconst classes = useStyles();\n\tconst currentUser = useSelector(state => state.login.currentUser);\n\tconsole.log(currentUser.transactions);\n\tlet currentTransactions = currentUser.transactions;\n\tuseEffect(() => {\n\t\tremoveDuplicates(currentTransactions);\n\t}, []);\n\n\tconst removeDuplicates = transactions => {\n\t\tlet uniqueSet = new Set();\n\t\tlet transactionData = JSON.stringify(transactions);\n\t\tlet newTransactionData = JSON.parse(transactionData);\n\t\tfor (let i = 0; i < newTransactionData.length; i++) {\n\t\t\tdebugger;\n\t\t\tif (!uniqueSet.has(newTransactionData.stock)) {\n\t\t\t\tuniqueSet.add(newTransactionData.stock);\n\t\t\t}\n\t\t}\n\n\t\treturn uniqueSet;\n\t};\n\t// const renderTransactions = () => {\n\t// \treturn transactions.map(transaction => {\n\t// \t\treturn <Transactions key={transaction.id} transaction={transaction} />;\n\t// \t});\n\t// };\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<h1 className={classes.title}>Transactions</h1>\n\t\t\t{/* {renderTransactions()} */}\n\t\t</div>\n\t);\n};\n\nexport default TransactionsContainer;\n"]},"metadata":{},"sourceType":"module"}