{"ast":null,"code":"var _jsxFileName = \"/Users/hamidoudiallo/Desktop/react_projects/portfolio_stocks/frontend/src/components/pages/PurchaseForm.jsx\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\nimport purchaseActions from \"../../redux/actions/purchaseActions\";\nimport loginActions from \"../../redux/actions/loginActions\";\nimport stockActions from \"../../redux/actions/stocksActions\";\nconst useStyles = makeStyles({\n  root: {\n    marginTop: \"100px\"\n  },\n  purchaseForm: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"30%\",\n    margin: \"0 auto\"\n  },\n  label: {\n    textAlign: \"center\"\n  },\n  input: {\n    textAlign: \"center\",\n    padding: \"10px\",\n    marginTop: \"10px\"\n  },\n  button: {\n    width: \"100%\",\n    borderRadius: \"10px\",\n    background: \"#a12bcc\",\n    color: \"whitesmoke\",\n    margin: \"20px auto 0 auto\",\n    \"&:hover\": {\n      background: \"#a12bcc\",\n      color: \"whitesmoke\"\n    }\n  },\n  closedButton: {\n    width: \"100%\",\n    borderRadius: \"10px\",\n    background: \"#a12bcc\",\n    color: \"whitesmoke\",\n    margin: \"20px auto 0 auto\",\n    \"&:hover\": {\n      background: \"#a12bcc\",\n      color: \"whitesmoke\"\n    }\n  },\n  low: {\n    color: \"#f50c2b\"\n  },\n  even: {\n    color: \"grey\"\n  },\n  high: {\n    color: \"#0af229\"\n  },\n  div: {\n    display: \"flex\",\n    width: \"8%\",\n    margin: \"0 auto\"\n  },\n  ticker: {\n    textAlign: \"center\",\n    marginRight: \"10px\"\n  },\n  userBalance: {\n    textAlign: \"center\"\n  }\n});\n\nconst PurchaseForm = props => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const currentUser = useSelector(state => state.login.currentUser);\n  const currentStock = JSON.parse(localStorage.stock);\n  const [quantityInput, setQuantityInput] = useState();\n  const current_price = parseInt(currentStock.current_price);\n  const userBalance = parseInt(currentUser.balance);\n  console.log(currentUser.balance, currentStock.current_price);\n\n  const renderTicker = () => {\n    if (currentStock.current_price > currentStock.open_price) {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        className: classes.high,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      }, \" \", currentStock.ticker);\n    } else if (currentStock.current_price < currentStock.open_price) {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        className: classes.low,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, currentStock.ticker);\n    } else {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        className: classes.med,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, \" \", currentStock.ticker);\n    }\n  };\n\n  const handleChange = evt => {\n    let stockQuantity = parseInt(evt.target.value);\n    setQuantityInput(stockQuantity);\n  };\n\n  const handleSubmit = evt => {\n    let stockPrice = currentStock.current_price * quantityInput;\n    console.log(\"clicked\");\n    evt.preventDefault();\n    dispatch(purchaseActions.postTransactionToDB(stockPrice, quantityInput, currentUser.id, currentStock.id));\n    dispatch(loginActions.patchUserBalanceToDB(currentUser, stockPrice));\n    dispatch(stockActions.patchStockToDB(currentStock, quantityInput));\n    setQuantityInput();\n    setTimeout(() => {\n      props.history.push(\"/stocks\");\n    }, 1000);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.userBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }\n  }, \"CASH - $\", currentUser.balance), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.div,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: classes.ticker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, \"Ticker:\"), renderTicker()), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.purchaseForm,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, \"QTY:\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.input,\n    type: \"text\",\n    placeholder: \"Quantity\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }), userBalance > current_price ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    disabled: false,\n    variant: \"outlined\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 6\n    }\n  }, \"Buy\") : /*#__PURE__*/React.createElement(Button, {\n    className: classes.button,\n    disabled: true,\n    variant: \"outlined\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 6\n    }\n  }, \"Buy\")));\n};\n\nexport default PurchaseForm;","map":{"version":3,"sources":["/Users/hamidoudiallo/Desktop/react_projects/portfolio_stocks/frontend/src/components/pages/PurchaseForm.jsx"],"names":["React","useState","useSelector","useDispatch","makeStyles","Button","purchaseActions","loginActions","stockActions","useStyles","root","marginTop","purchaseForm","display","flexDirection","width","margin","label","textAlign","input","padding","button","borderRadius","background","color","closedButton","low","even","high","div","ticker","marginRight","userBalance","PurchaseForm","props","classes","dispatch","currentUser","state","login","currentStock","JSON","parse","localStorage","stock","quantityInput","setQuantityInput","current_price","parseInt","balance","console","log","renderTicker","open_price","med","handleChange","evt","stockQuantity","target","value","handleSubmit","stockPrice","preventDefault","postTransactionToDB","id","patchUserBalanceToDB","patchStockToDB","setTimeout","history","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,OAAOC,eAAP,MAA4B,qCAA5B;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,YAAP,MAAyB,mCAAzB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC;AAC5BM,EAAAA,IAAI,EAAE;AACLC,IAAAA,SAAS,EAAE;AADN,GADsB;AAI5BC,EAAAA,YAAY,EAAE;AACbC,IAAAA,OAAO,EAAE,MADI;AAEbC,IAAAA,aAAa,EAAE,QAFF;AAGbC,IAAAA,KAAK,EAAE,KAHM;AAIbC,IAAAA,MAAM,EAAE;AAJK,GAJc;AAU5BC,EAAAA,KAAK,EAAE;AACNC,IAAAA,SAAS,EAAE;AADL,GAVqB;AAa5BC,EAAAA,KAAK,EAAE;AACND,IAAAA,SAAS,EAAE,QADL;AAENE,IAAAA,OAAO,EAAE,MAFH;AAGNT,IAAAA,SAAS,EAAE;AAHL,GAbqB;AAkB5BU,EAAAA,MAAM,EAAE;AACPN,IAAAA,KAAK,EAAE,MADA;AAEPO,IAAAA,YAAY,EAAE,MAFP;AAGPC,IAAAA,UAAU,EAAE,SAHL;AAIPC,IAAAA,KAAK,EAAE,YAJA;AAKPR,IAAAA,MAAM,EAAE,kBALD;AAMP,eAAW;AACVO,MAAAA,UAAU,EAAE,SADF;AAEVC,MAAAA,KAAK,EAAE;AAFG;AANJ,GAlBoB;AA6B5BC,EAAAA,YAAY,EAAE;AACbV,IAAAA,KAAK,EAAE,MADM;AAEbO,IAAAA,YAAY,EAAE,MAFD;AAGbC,IAAAA,UAAU,EAAE,SAHC;AAIbC,IAAAA,KAAK,EAAE,YAJM;AAKbR,IAAAA,MAAM,EAAE,kBALK;AAMb,eAAW;AACVO,MAAAA,UAAU,EAAE,SADF;AAEVC,MAAAA,KAAK,EAAE;AAFG;AANE,GA7Bc;AAwC5BE,EAAAA,GAAG,EAAE;AACJF,IAAAA,KAAK,EAAE;AADH,GAxCuB;AA2C5BG,EAAAA,IAAI,EAAE;AACLH,IAAAA,KAAK,EAAE;AADF,GA3CsB;AA8C5BI,EAAAA,IAAI,EAAE;AACLJ,IAAAA,KAAK,EAAE;AADF,GA9CsB;AAiD5BK,EAAAA,GAAG,EAAE;AACJhB,IAAAA,OAAO,EAAE,MADL;AAEJE,IAAAA,KAAK,EAAE,IAFH;AAGJC,IAAAA,MAAM,EAAE;AAHJ,GAjDuB;AAsD5Bc,EAAAA,MAAM,EAAE;AACPZ,IAAAA,SAAS,EAAE,QADJ;AAEPa,IAAAA,WAAW,EAAE;AAFN,GAtDoB;AA0D5BC,EAAAA,WAAW,EAAE;AACZd,IAAAA,SAAS,EAAE;AADC;AA1De,CAAD,CAA5B;;AA8DA,MAAMe,YAAY,GAAGC,KAAK,IAAI;AAC7B,QAAMC,OAAO,GAAG1B,SAAS,EAAzB;AACA,QAAM2B,QAAQ,GAAGjC,WAAW,EAA5B;AACA,QAAMkC,WAAW,GAAGnC,WAAW,CAACoC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,WAAtB,CAA/B;AACA,QAAMG,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,KAAxB,CAArB;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC7C,QAAQ,EAAlD;AACA,QAAM8C,aAAa,GAAGC,QAAQ,CAACR,YAAY,CAACO,aAAd,CAA9B;AACA,QAAMf,WAAW,GAAGgB,QAAQ,CAACX,WAAW,CAACY,OAAb,CAA5B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYd,WAAW,CAACY,OAAxB,EAAiCT,YAAY,CAACO,aAA9C;;AACA,QAAMK,YAAY,GAAG,MAAM;AAC1B,QAAIZ,YAAY,CAACO,aAAb,GAA6BP,YAAY,CAACa,UAA9C,EAA0D;AACzD,0BAAO;AAAI,QAAA,SAAS,EAAElB,OAAO,CAACP,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA+BY,YAAY,CAACV,MAA5C,CAAP;AACA,KAFD,MAEO,IAAIU,YAAY,CAACO,aAAb,GAA6BP,YAAY,CAACa,UAA9C,EAA0D;AAChE,0BAAO;AAAI,QAAA,SAAS,EAAElB,OAAO,CAACT,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6Bc,YAAY,CAACV,MAA1C,CAAP;AACA,KAFM,MAEA;AACN,0BAAO;AAAI,QAAA,SAAS,EAAEK,OAAO,CAACmB,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA8Bd,YAAY,CAACV,MAA3C,CAAP;AACA;AACD,GARD;;AAUA,QAAMyB,YAAY,GAAGC,GAAG,IAAI;AAC3B,QAAIC,aAAa,GAAGT,QAAQ,CAACQ,GAAG,CAACE,MAAJ,CAAWC,KAAZ,CAA5B;AACAb,IAAAA,gBAAgB,CAACW,aAAD,CAAhB;AACA,GAHD;;AAKA,QAAMG,YAAY,GAAGJ,GAAG,IAAI;AAC3B,QAAIK,UAAU,GAAGrB,YAAY,CAACO,aAAb,GAA6BF,aAA9C;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAK,IAAAA,GAAG,CAACM,cAAJ;AAEA1B,IAAAA,QAAQ,CACP9B,eAAe,CAACyD,mBAAhB,CACCF,UADD,EAEChB,aAFD,EAGCR,WAAW,CAAC2B,EAHb,EAICxB,YAAY,CAACwB,EAJd,CADO,CAAR;AAQA5B,IAAAA,QAAQ,CAAC7B,YAAY,CAAC0D,oBAAb,CAAkC5B,WAAlC,EAA+CwB,UAA/C,CAAD,CAAR;AACAzB,IAAAA,QAAQ,CAAC5B,YAAY,CAAC0D,cAAb,CAA4B1B,YAA5B,EAA0CK,aAA1C,CAAD,CAAR;AAEAC,IAAAA,gBAAgB;AAChBqB,IAAAA,UAAU,CAAC,MAAM;AAChBjC,MAAAA,KAAK,CAACkC,OAAN,CAAcC,IAAd,CAAmB,SAAnB;AACA,KAFS,EAEP,IAFO,CAAV;AAGA,GApBD;;AAqBA,sBACC;AAAK,IAAA,SAAS,EAAElC,OAAO,CAACzB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAEyB,OAAO,CAACH,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA6CK,WAAW,CAACY,OAAzD,CADD,eAEC;AAAK,IAAA,SAAS,EAAEd,OAAO,CAACN,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAI,IAAA,SAAS,EAAEM,OAAO,CAACL,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,EAEEsB,YAAY,EAFd,CAFD,eAMC;AAAM,IAAA,SAAS,EAAEjB,OAAO,CAACvB,YAAzB;AAAuC,IAAA,QAAQ,EAAEgD,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAO,IAAA,SAAS,EAAEzB,OAAO,CAAClB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AACC,IAAA,SAAS,EAAEkB,OAAO,CAAChB,KADpB;AAEC,IAAA,IAAI,EAAC,MAFN;AAGC,IAAA,WAAW,EAAC,UAHb;AAIC,IAAA,QAAQ,EAAEoC,YAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAQEvB,WAAW,GAAGe,aAAd,gBACA,oBAAC,MAAD;AACC,IAAA,SAAS,EAAEZ,OAAO,CAACd,MADpB;AAEC,IAAA,QAAQ,EAAE,KAFX;AAGC,IAAA,OAAO,EAAC,UAHT;AAIC,IAAA,IAAI,EAAC,QAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADA,gBAUA,oBAAC,MAAD;AACC,IAAA,SAAS,EAAEc,OAAO,CAACd,MADpB;AAEC,IAAA,QAAQ,EAAE,IAFX;AAGC,IAAA,OAAO,EAAC,UAHT;AAIC,IAAA,IAAI,EAAC,QAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAlBF,CAND,CADD;AAqCA,CAlFD;;AAoFA,eAAeY,YAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\n\nimport purchaseActions from \"../../redux/actions/purchaseActions\";\nimport loginActions from \"../../redux/actions/loginActions\";\nimport stockActions from \"../../redux/actions/stocksActions\";\n\nconst useStyles = makeStyles({\n\troot: {\n\t\tmarginTop: \"100px\"\n\t},\n\tpurchaseForm: {\n\t\tdisplay: \"flex\",\n\t\tflexDirection: \"column\",\n\t\twidth: \"30%\",\n\t\tmargin: \"0 auto\"\n\t},\n\tlabel: {\n\t\ttextAlign: \"center\"\n\t},\n\tinput: {\n\t\ttextAlign: \"center\",\n\t\tpadding: \"10px\",\n\t\tmarginTop: \"10px\"\n\t},\n\tbutton: {\n\t\twidth: \"100%\",\n\t\tborderRadius: \"10px\",\n\t\tbackground: \"#a12bcc\",\n\t\tcolor: \"whitesmoke\",\n\t\tmargin: \"20px auto 0 auto\",\n\t\t\"&:hover\": {\n\t\t\tbackground: \"#a12bcc\",\n\t\t\tcolor: \"whitesmoke\"\n\t\t}\n\t},\n\tclosedButton: {\n\t\twidth: \"100%\",\n\t\tborderRadius: \"10px\",\n\t\tbackground: \"#a12bcc\",\n\t\tcolor: \"whitesmoke\",\n\t\tmargin: \"20px auto 0 auto\",\n\t\t\"&:hover\": {\n\t\t\tbackground: \"#a12bcc\",\n\t\t\tcolor: \"whitesmoke\"\n\t\t}\n\t},\n\tlow: {\n\t\tcolor: \"#f50c2b\"\n\t},\n\teven: {\n\t\tcolor: \"grey\"\n\t},\n\thigh: {\n\t\tcolor: \"#0af229\"\n\t},\n\tdiv: {\n\t\tdisplay: \"flex\",\n\t\twidth: \"8%\",\n\t\tmargin: \"0 auto\"\n\t},\n\tticker: {\n\t\ttextAlign: \"center\",\n\t\tmarginRight: \"10px\"\n\t},\n\tuserBalance: {\n\t\ttextAlign: \"center\"\n\t}\n});\nconst PurchaseForm = props => {\n\tconst classes = useStyles();\n\tconst dispatch = useDispatch();\n\tconst currentUser = useSelector(state => state.login.currentUser);\n\tconst currentStock = JSON.parse(localStorage.stock);\n\tconst [quantityInput, setQuantityInput] = useState();\n\tconst current_price = parseInt(currentStock.current_price);\n\tconst userBalance = parseInt(currentUser.balance);\n\tconsole.log(currentUser.balance, currentStock.current_price);\n\tconst renderTicker = () => {\n\t\tif (currentStock.current_price > currentStock.open_price) {\n\t\t\treturn <h3 className={classes.high}> {currentStock.ticker}</h3>;\n\t\t} else if (currentStock.current_price < currentStock.open_price) {\n\t\t\treturn <h3 className={classes.low}>{currentStock.ticker}</h3>;\n\t\t} else {\n\t\t\treturn <h3 className={classes.med}> {currentStock.ticker}</h3>;\n\t\t}\n\t};\n\n\tconst handleChange = evt => {\n\t\tlet stockQuantity = parseInt(evt.target.value);\n\t\tsetQuantityInput(stockQuantity);\n\t};\n\n\tconst handleSubmit = evt => {\n\t\tlet stockPrice = currentStock.current_price * quantityInput;\n\t\tconsole.log(\"clicked\");\n\t\tevt.preventDefault();\n\n\t\tdispatch(\n\t\t\tpurchaseActions.postTransactionToDB(\n\t\t\t\tstockPrice,\n\t\t\t\tquantityInput,\n\t\t\t\tcurrentUser.id,\n\t\t\t\tcurrentStock.id\n\t\t\t)\n\t\t);\n\t\tdispatch(loginActions.patchUserBalanceToDB(currentUser, stockPrice));\n\t\tdispatch(stockActions.patchStockToDB(currentStock, quantityInput));\n\n\t\tsetQuantityInput();\n\t\tsetTimeout(() => {\n\t\t\tprops.history.push(\"/stocks\");\n\t\t}, 1000);\n\t};\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<h2 className={classes.userBalance}>CASH - ${currentUser.balance}</h2>\n\t\t\t<div className={classes.div}>\n\t\t\t\t<h4 className={classes.ticker}>Ticker:</h4>\n\t\t\t\t{renderTicker()}\n\t\t\t</div>\n\t\t\t<form className={classes.purchaseForm} onSubmit={handleSubmit}>\n\t\t\t\t<label className={classes.label}>QTY:</label>\n\t\t\t\t<input\n\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder=\"Quantity\"\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t{userBalance > current_price ? (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tdisabled={false}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tBuy\n\t\t\t\t\t</Button>\n\t\t\t\t) : (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tdisabled={true}\n\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\tBuy\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default PurchaseForm;\n"]},"metadata":{},"sourceType":"module"}