{"ast":null,"code":"var BASE_URL=\"https://stockfolio-api.herokuapp.com/transactions\";var setTransactions=function setTransactions(transactions){return{type:\"GET_TRANSACTIONS\",payload:transactions};};var getTransactionsFromDB=function getTransactionsFromDB(userId){return function(dispatch){var config={method:\"GET\",headers:{Authorization:\"Bearer \".concat(localStorage.token)}};fetch(BASE_URL,config).then(function(res){return res.json();}).then(function(transactionData){dispatch(setTransactions(transactionData));}).catch(function(error){return console.log(error);});};};var postTransactionToDB=function postTransactionToDB(stockPrice,stockQuantity,userId,stockId){return function(dispatch){var config={method:\"POST\",headers:{Authorization:\"Bearer \".concat(localStorage.token),Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:JSON.stringify({price:stockPrice,quantity:stockQuantity,user_id:userId,stock_id:stockId})};fetch(BASE_URL,config).then(function(res){return res.json();}).then(function(postData){return console.log(postData);}).catch(function(error){return console.log(error);});};};export default{getTransactionsFromDB:getTransactionsFromDB,postTransactionToDB:postTransactionToDB};","map":{"version":3,"sources":["/Users/hamidoudiallo/Desktop/react_projects/portfolio_stocks/frontend/src/redux/actions/purchaseActions.js"],"names":["BASE_URL","setTransactions","transactions","type","payload","getTransactionsFromDB","userId","dispatch","config","method","headers","Authorization","localStorage","token","fetch","then","res","json","transactionData","catch","error","console","log","postTransactionToDB","stockPrice","stockQuantity","stockId","Accept","body","JSON","stringify","price","quantity","user_id","stock_id","postData"],"mappings":"AAAA,GAAMA,CAAAA,QAAQ,CAAG,mDAAjB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,YAAD,QAAmB,CAC1CC,IAAI,CAAE,kBADoC,CAE1CC,OAAO,CAAEF,YAFiC,CAAnB,EAAxB,CAKA,GAAMG,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,MAAD,QAAY,UAACC,QAAD,CAAc,CACvD,GAAIC,CAAAA,MAAM,CAAG,CACZC,MAAM,CAAE,KADI,CAEZC,OAAO,CAAE,CACRC,aAAa,kBAAYC,YAAY,CAACC,KAAzB,CADL,CAFG,CAAb,CAOAC,KAAK,CAACd,QAAD,CAAWQ,MAAX,CAAL,CACEO,IADF,CACO,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADP,EAEEF,IAFF,CAEO,SAACG,eAAD,CAAqB,CAC1BX,QAAQ,CAACN,eAAe,CAACiB,eAAD,CAAhB,CAAR,CACA,CAJF,EAKEC,KALF,CAKQ,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX,EALR,EAMA,CAd6B,EAA9B,CAgBA,GAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,UAAD,CAAaC,aAAb,CAA4BnB,MAA5B,CAAoCoB,OAApC,QAAgD,UAC3EnB,QAD2E,CAEvE,CACJ,GAAIC,CAAAA,MAAM,CAAG,CACZC,MAAM,CAAE,MADI,CAEZC,OAAO,CAAE,CACRC,aAAa,kBAAYC,YAAY,CAACC,KAAzB,CADL,CAERc,MAAM,CAAE,kBAFA,CAGR,eAAgB,kBAHR,CAFG,CAOZC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CACpBC,KAAK,CAAEP,UADa,CAEpBQ,QAAQ,CAAEP,aAFU,CAGpBQ,OAAO,CAAE3B,MAHW,CAIpB4B,QAAQ,CAAER,OAJU,CAAf,CAPM,CAAb,CAcAZ,KAAK,CAACd,QAAD,CAAWQ,MAAX,CAAL,CACEO,IADF,CACO,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EADP,EAEEF,IAFF,CAEO,SAACoB,QAAD,QAAcd,CAAAA,OAAO,CAACC,GAAR,CAAYa,QAAZ,CAAd,EAFP,EAGEhB,KAHF,CAGQ,SAACC,KAAD,QAAWC,CAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX,EAHR,EAIA,CArB2B,EAA5B,CAuBA,cAAe,CACdf,qBAAqB,CAArBA,qBADc,CAEdkB,mBAAmB,CAAnBA,mBAFc,CAAf","sourcesContent":["const BASE_URL = \"https://stockfolio-api.herokuapp.com/transactions\";\n\nconst setTransactions = (transactions) => ({\n\ttype: \"GET_TRANSACTIONS\",\n\tpayload: transactions,\n});\n\nconst getTransactionsFromDB = (userId) => (dispatch) => {\n\tlet config = {\n\t\tmethod: \"GET\",\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${localStorage.token}`,\n\t\t},\n\t};\n\n\tfetch(BASE_URL, config)\n\t\t.then((res) => res.json())\n\t\t.then((transactionData) => {\n\t\t\tdispatch(setTransactions(transactionData));\n\t\t})\n\t\t.catch((error) => console.log(error));\n};\n\nconst postTransactionToDB = (stockPrice, stockQuantity, userId, stockId) => (\n\tdispatch\n) => {\n\tlet config = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${localStorage.token}`,\n\t\t\tAccept: \"application/json\",\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tprice: stockPrice,\n\t\t\tquantity: stockQuantity,\n\t\t\tuser_id: userId,\n\t\t\tstock_id: stockId,\n\t\t}),\n\t};\n\tfetch(BASE_URL, config)\n\t\t.then((res) => res.json())\n\t\t.then((postData) => console.log(postData))\n\t\t.catch((error) => console.log(error));\n};\n\nexport default {\n\tgetTransactionsFromDB,\n\tpostTransactionToDB,\n};\n"]},"metadata":{},"sourceType":"module"}